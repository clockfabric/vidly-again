{"version":3,"sources":["components/Pagination.js","components/GenreList.js","components/MoviesTableHead.js","components/Like.js","components/Movie.js","components/MoviesTableBody.js","services/fakeGenreService.js","services/fakeMovieService.js","components/Movies.js","Utils/genreFilter.js","Utils/paginate.js","Utils/sorting.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","props","numberOfItems","itemsPerPage","currentPage","handlePageChanges","numberOfPages","Math","ceil","pages","i","push","react_default","a","createElement","aria-label","className","map","page","key","style","cursor","onClick","GenreList","genreList","currentGenre","handleGenreSelection","genre","_id","name","MoviesTableHead","sortDirection","sortCategoryIndex","movieTableHeadingsList","handleSort","heading","index","Like","liked","handleLike","id","Movie","title","numMovieInGenre","stock","rate","deleteMovie","components_Like","MoviesTableBody","pagedMovies","length","handleDeleteMovie","movie","components_Movie","numberInStock","dailyRentalRate","genres","movies","publishDate","Movies","allMovies","_useState","useState","_useState2","Object","slicedToArray","setMovies","_useState3","_useState4","setCurrentPage","filter","g","concat","toConsumableArray","_useState5","_useState6","setCurrentGenre","movieTableSortCategory","_useState7","_useState8","setSortDirection","_useState9","_useState10","setSortCategoryIndex","useEffect","moviesWithout","moviesLiked","pageNum","headingIndex","Fragment","components_GenreList","selectedGenre","items","genreFilteredMovies","item","pageNumber","pageSize","startIndex","_","slice","take","value","paginate","category","direction","orderBy","sorting","components_MoviesTableHead","components_MoviesTableBody","components_Pagination","renderHeadingMessage","App","components_Movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.425e4235.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = props => {\r\n\tconst {\r\n\t\tnumberOfItems,\r\n\t\titemsPerPage,\r\n\t\tcurrentPage,\r\n\t\thandlePageChanges\r\n\t} = props;\r\n\r\n\tconst numberOfPages = Math.ceil(numberOfItems / itemsPerPage);\r\n\tif (numberOfPages <= 1) {\r\n\t\treturn null;\r\n\t}\r\n\tconst pages = [];\r\n\tfor (let i = 1; i <= numberOfPages; i++) {\r\n\t\tpages.push(i);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav aria-label='Page navigation'>\r\n\t\t\t<ul className='pagination'>\r\n\t\t\t\t{pages.map(page => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tpage === currentPage\r\n\t\t\t\t\t\t\t\t\t? \"page-item active\"\r\n\t\t\t\t\t\t\t\t\t: \"page-item\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={() => handlePageChanges(page)}>\r\n\t\t\t\t\t\t\t<span className='page-link'>{page}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nPagination.propTypes = {\r\n\tnumberOfItems: PropTypes.number.isRequired,\r\n\titemsPerPage: PropTypes.number.isRequired,\r\n\tcurrentPage: PropTypes.number.isRequired,\r\n\thandlePageChanges: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst GenreList = props => {\r\n\tconst { genreList, currentGenre, handleGenreSelection } = props;\r\n\r\n\treturn (\r\n\t\t<ul className='list-group mt-5'>\r\n\t\t\t{genreList.map(genre => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tkey={genre._id}\r\n\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tcurrentGenre === genre.name\r\n\t\t\t\t\t\t\t\t? \"list-group-item active\"\r\n\t\t\t\t\t\t\t\t: \"list-group-item\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClick={() => handleGenreSelection(genre.name)}>\r\n\t\t\t\t\t\t{genre.name}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default GenreList;\r\n","import React from \"react\";\r\n\r\nconst MoviesTableHead = props => {\r\n\tconst {\r\n\t\tsortDirection,\r\n\t\tsortCategoryIndex,\r\n\t\tmovieTableHeadingsList,\r\n\t\thandleSort\r\n\t} = props;\r\n\treturn (\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t{movieTableHeadingsList.map((heading, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<th\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\tonClick={() => handleSort(index)}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{heading}{\" \"}\r\n\t\t\t\t\t\t\t\t{sortCategoryIndex === index ? (\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tsortDirection\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"fa fa-angle-double-up\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"fa fa-angle-double-down\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<th />\r\n\t\t\t\t<th />\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t);\r\n};\r\n\r\nexport default MoviesTableHead;\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n\treturn (\r\n\t\t<i\r\n\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\tclassName={props.liked ? \"fa fa-heart\" : \"fa fa-heart-o\"}\r\n\t\t\tonClick={() => props.handleLike(props.id)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\nimport Like from \"./Like\";\r\n\r\nconst Movie = props => {\r\n\tconst {\r\n\t\tid,\r\n\t\ttitle,\r\n\t\tgenre,\r\n\t\tnumMovieInGenre,\r\n\t\tstock,\r\n\t\trate,\r\n\t\tdeleteMovie,\r\n\t\thandleLike,\r\n\t\tliked\r\n\t} = props;\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td>{title}</td>\r\n\t\t\t<td>{genre.name}</td>\r\n\t\t\t<td>{stock}</td>\r\n\t\t\t<td>{rate}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Like liked={liked} handleLike={handleLike} id={id} />\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='btn btn-outline-danger btn-sm'\r\n\t\t\t\t\tonClick={() => deleteMovie(id, numMovieInGenre)}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nconst MoviesTableBody = props => {\r\n\tconst { pagedMovies, length, handleDeleteMovie, handleLike } = props;\r\n\treturn (\r\n\t\t<tbody>\r\n\t\t\t{pagedMovies.map(movie => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Movie\r\n\t\t\t\t\t\tkey={movie._id}\r\n\t\t\t\t\t\tid={movie._id}\r\n\t\t\t\t\t\ttitle={movie.title}\r\n\t\t\t\t\t\tgenre={movie.genre}\r\n\t\t\t\t\t\tnumMovieInGenre={length}\r\n\t\t\t\t\t\tstock={movie.numberInStock}\r\n\t\t\t\t\t\trate={movie.dailyRentalRate}\r\n\t\t\t\t\t\tliked={movie.liked}\r\n\t\t\t\t\t\tdeleteMovie={handleDeleteMovie}\r\n\t\t\t\t\t\thandleLike={handleLike}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</tbody>\r\n\t);\r\n};\r\n\r\nexport default MoviesTableBody;\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471815\",\n\t\ttitle: \"Terminator\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\t\tnumberInStock: 6,\n\t\tdailyRentalRate: 2.5,\n\t\tpublishDate: \"2018-01-03T19:04:28.809Z\",\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471816\",\n\t\ttitle: \"Die Hard\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\t\tnumberInStock: 5,\n\t\tdailyRentalRate: 2.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471817\",\n\t\ttitle: \"Get Out\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n\t\tnumberInStock: 8,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471819\",\n\t\ttitle: \"Trip to Italy\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd47181a\",\n\t\ttitle: \"Airplane\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd47181b\",\n\t\ttitle: \"Wedding Crashers\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd47181e\",\n\t\ttitle: \"Gone Girl\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 4.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd47181f\",\n\t\ttitle: \"The Sixth Sense\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n\t\tnumberInStock: 4,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471821\",\n\t\ttitle: \"The Avengers\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471822\",\n\t\ttitle: \"Infinity War\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\t\tnumberInStock: 4,\n\t\tdailyRentalRate: 5.0,\n\t\tliked: false\n\t},\n\t{\n\t\t_id: \"5b21ca3eeb7f6fbccd471823\",\n\t\ttitle: \"End Game\",\n\t\tgenre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\t\tnumberInStock: 6,\n\t\tdailyRentalRate: 4.9,\n\t\tliked: false\n\t}\n];\n\nexport function getMovies() {\n\treturn movies;\n}\n\nexport function getMovie(id) {\n\treturn movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n\tlet movieInDb = movies.find(m => m._id === movie._id) || {};\n\tmovieInDb.name = movie.name;\n\tmovieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n\tmovieInDb.numberInStock = movie.numberInStock;\n\tmovieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n\tif (!movieInDb._id) {\n\t\tmovieInDb._id = Date.now();\n\t\tmovies.push(movieInDb);\n\t}\n\n\treturn movieInDb;\n}\n\nexport function deleteMovie(id) {\n\tlet movieInDb = movies.find(m => m._id === id);\n\tmovies.splice(movies.indexOf(movieInDb), 1);\n\treturn movieInDb;\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport GenreList from \"./GenreList\";\r\nimport MoviesTableHead from \"./MoviesTableHead\";\r\nimport MoviesTableBody from \"./MoviesTableBody\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { paginate } from \"../Utils/paginate\";\r\nimport { genreFilter } from \"../Utils/genreFilter\";\r\nimport { sorting } from \"../Utils/sorting\";\r\n\r\nconst Movies = () => {\r\n\tconst allMovies = getMovies();\r\n\tconst itemsPerPage = 4;\r\n\tconst [movies, setMovies] = useState(allMovies);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\r\n\tlet genreList = getGenres();\r\n\tgenreList = [{ _id: 1, name: \"All Genres\" }, ...genreList];\r\n\tconst [currentGenre, setCurrentGenre] = useState(genreList[0].name);\r\n\r\n\tlet movieTableHeadingsList = [\"Title\", \"Genre\", \"Stock\", \"Rate\"];\r\n\tconst movieTableSortCategory = [\r\n\t\t\"title\",\r\n\t\t\"genre.name\",\r\n\t\t\"numberInStock\",\r\n\t\t\"dailyRentalRate\"\r\n\t];\r\n\r\n\tconst [sortDirection, setSortDirection] = useState(false);\r\n\tconst [sortCategoryIndex, setSortCategoryIndex] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\thandlePageChanges(currentPage);\r\n\t});\r\n\r\n\tconst handleDeleteMovie = (id, numMovieInGenre) => {\r\n\t\tconst moviesWithout = movies.filter(movie => {\r\n\t\t\treturn movie._id !== id;\r\n\t\t});\r\n\t\tif (\r\n\t\t\tcurrentPage > 1 &&\r\n\t\t\tnumMovieInGenre - 1 === (currentPage - 1) * itemsPerPage\r\n\t\t) {\r\n\t\t\tsetCurrentPage(currentPage - 1);\r\n\t\t}\r\n\t\tsetMovies(moviesWithout);\r\n\t};\r\n\r\n\tconst handleLike = id => {\r\n\t\tconst moviesLiked = movies.map(movie => {\r\n\t\t\tif (movie._id === id) {\r\n\t\t\t\tmovie.liked = !movie.liked;\r\n\t\t\t}\r\n\t\t\treturn movie;\r\n\t\t});\r\n\t\tsetMovies(moviesLiked);\r\n\t};\r\n\r\n\tconst handlePageChanges = pageNum => {\r\n\t\tsetCurrentPage(pageNum);\r\n\t};\r\n\r\n\tconst handleGenreSelection = selectedGenre => {\r\n\t\tsetCurrentGenre(selectedGenre);\r\n\t\tsetCurrentPage(1);\r\n\t};\r\n\r\n\tconst handleSort = headingIndex => {\r\n\t\tsetSortCategoryIndex(headingIndex);\r\n\t\tsetSortDirection(!sortDirection);\r\n\t};\r\n\r\n\tconst renderHeadingMessage = () => {\r\n\t\tconst genreFilteredMovies = genreFilter(movies, currentGenre);\r\n\t\tlet length = genreFilteredMovies.length;\r\n\t\tconst sortedMovieList = sorting(\r\n\t\t\tgenreFilteredMovies,\r\n\t\t\tmovieTableSortCategory[sortCategoryIndex],\r\n\t\t\tsortDirection\r\n\t\t);\r\n\t\tconst pagedMovies = paginate(\r\n\t\t\tsortedMovieList,\r\n\t\t\tcurrentPage,\r\n\t\t\titemsPerPage\r\n\t\t);\r\n\t\tif (!length) {\r\n\t\t\treturn <h5>No movies in the database!</h5>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h5>{`Showing ${length} movies in the database. (Category: ${currentGenre})`}</h5>\r\n\t\t\t\t\t<table className='table table-striped'>\r\n\t\t\t\t\t\t<MoviesTableHead\r\n\t\t\t\t\t\t\thandleSort={handleSort}\r\n\t\t\t\t\t\t\tsortCategoryIndex={sortCategoryIndex}\r\n\t\t\t\t\t\t\tmovieTableHeadingsList={movieTableHeadingsList}\r\n\t\t\t\t\t\t\tsortDirection={sortDirection}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MoviesTableBody\r\n\t\t\t\t\t\t\tpagedMovies={pagedMovies}\r\n\t\t\t\t\t\t\tlength={length}\r\n\t\t\t\t\t\t\thandleDeleteMovie={handleDeleteMovie}\r\n\t\t\t\t\t\t\thandleLike={handleLike}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\tnumberOfItems={length}\r\n\t\t\t\t\t\titemsPerPage={itemsPerPage}\r\n\t\t\t\t\t\thandlePageChanges={handlePageChanges}\r\n\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className='container mt-4'>\r\n\t\t\t\t<div className='row justify-content-md-center'>\r\n\t\t\t\t\t<div className='col col-sm-12 col-md-12 col-lg-3 mb-4'>\r\n\t\t\t\t\t\t<GenreList\r\n\t\t\t\t\t\t\tcurrentGenre={currentGenre}\r\n\t\t\t\t\t\t\tgenreList={genreList}\r\n\t\t\t\t\t\t\thandleGenreSelection={handleGenreSelection}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col'>{renderHeadingMessage()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Movies;\r\n","export function genreFilter(items, genre) {\r\n\tif (genre === \"All Genres\") return items;\r\n\treturn items.filter(item => {\r\n\t\treturn item.genre.name === genre;\r\n\t});\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n\tconst startIndex = (pageNumber - 1) * pageSize;\r\n\treturn _(items)\r\n\t\t.slice(startIndex)\r\n\t\t.take(pageSize)\r\n\t\t.value();\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function sorting(items, category, direction) {\r\n\tif (direction) {\r\n\t\treturn _.orderBy(items, category, \"asc\");\r\n\t} else {\r\n\t\treturn _.orderBy(items, category, \"desc\");\r\n\t}\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\n\nfunction App() {\n\treturn (\n\t\t<main className='container'>\n\t\t\t<Movies />\n\t\t</main>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}